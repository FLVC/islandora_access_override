<?php
/**
 * @file
 * Module entry hooks.
 */

// Permissions.
const ISLANDORA_OWNER_PERMISSIONS_EDIT_METADATA = 'islandora owner edit metadata';
const ISLANDORA_OWNER_PERMISSIONS_REPLACE_DATASTREAMS = 'islandora owner replace datastreams';
const ISLANDORA_OWNER_PERMISSIONS_CREATE_DATASTREAMS = 'islandora owner create datastreams';
const ISLANDORA_OWNER_PERMISSIONS_REMOVE_OBJECTS = 'islandora owner remove objects';
const ISLANDORA_OWNER_PERMISSIONS_REVERT_DATASTREAMS = 'islandora owner revert datastreams';
const ISLANDORA_OWNER_PERMISSIONS_REGENERATE_DERIVATIVES = 'islandora owner regenerate derivatives';

/**
 * Implements hook_permission().
 */
function islandora_owner_permissions_permission() {
  return array(
    ISLANDORA_OWNER_PERMISSIONS_EDIT_METADATA => array(
      'title' => t('Edit Metadata on Owned Objects'),
      'description' => t('Allows a user to edit metadata on their owned objects.'),
    ),
    ISLANDORA_OWNER_PERMISSIONS_REPLACE_DATASTREAMS => array(
      'title' => t('Replace Datastreams on Owned Objects'),
      'description' => t('Allows a user to replace datastreams on their owned objects.'),
    ),
    ISLANDORA_OWNER_PERMISSIONS_CREATE_DATASTREAMS => array(
      'title' => t('Create Datastreams on Owned Objects'),
      'description' => t('Allows a user to create datastreams on their owned objects.'),
    ),
    ISLANDORA_OWNER_PERMISSIONS_REMOVE_OBJECTS => array(
      'title' => t('Remove Owned Objects'),
      'description' => t('Allows a user to purge their owned objects.'),
    ),
    ISLANDORA_OWNER_PERMISSIONS_REVERT_DATASTREAMS => array(
      'title' => t('Revert Datastreams on Owned Objects'),
      'description' => t('Allows a user to revert datastreams on their owned objects.'),
    ),
    ISLANDORA_OWNER_PERMISSIONS_REGENERATE_DERIVATIVES => array(
      'title' => t('Regenerate Derivatives on Owned Objects'),
      'description' => t('Allows a user to regenerate derivatives on their owned objects.'),
    ),
  );
}

/**
 * Implements hook_module_implements_alter().
 *
 * We are replacing Islandora's datasteam access implementation with our own.
 */
function islandora_owner_permissions_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'islandora_datastream_access' && isset($implementations['islandora'])) {
    unset($implementations['islandora']);
  }
  elseif ($hook == 'islandora_object_access' && isset($implementations['islandora'])) {
    unset($implementations['islandora']);
  }
}

/**
 * Implements hook_islandora_object_access().
 */
function islandora_owner_permissions_islandora_object_access($op, $object, $user) {
  module_load_include('inc', 'islandora_owner_permissions', 'includes/utilities');
  $perm_map = islandora_owner_permissions_permission_map();
  // Call original if we are not the owner or don't override the op.
  if (!isset($user->name) || $user->name != $object->owner || !array_key_exists($op, $perm_map)) {
    return islandora_islandora_object_access($op, $object, $user);
  }
  else {
    return TRUE;
  }
}

/**
 * Implements hook_islandora_datastream_access().
 */
function islandora_owner_permissions_islandora_datastream_access($op, $datastream, $user) {
  module_load_include('inc', 'islandora_owner_permissions', 'includes/utilities');
  $perm_map = islandora_owner_permissions_permission_map();
  // Call original if we are not the owner or don't override the op.
  if (!isset($user->name) || $user->name != $datastream->parent->owner || !array_key_exists($op, $perm_map)) {
    return islandora_islandora_datastream_access($op, $datastream, $user);
  }
  else {
    return TRUE;
  }
}
