<?php
/**
 * @file
 * Module entry hooks.
 */

const ISLANDORA_COLLECTION_PERMISSIONS_CREATE = 'islandora collection permissions create';
const ISLANDORA_COLLECTION_PERMISSIONS_UPDATE = 'islandora collection permissions update';
const ISLANDORA_COLLECTION_PERMISSIONS_DELETE = 'islandora collection permissions delete';

const ISLANDORA_COLLECTION_PERMISSIONS_MANAGE_COLLECTION_OVERRIDES = 'allow management of collection permission overrides';

/**
 * Implements hook_permission().
 */
function islandora_collection_permissions_permission() {
  $perm = array();

  $perm[ISLANDORA_COLLECTION_PERMISSIONS_MANAGE_COLLECTION_OVERRIDES] = array(
    'title' => t('Allow management of collection permission overrides.'),
    'description' => t('Users with this permission will be able to grant other roles permissions on specific collections.'),
    'restrict access' => TRUE,
  );

  return $perm;
}

function islandora_collection_permissions_menu() {
  $item = array();

  $item['islandora/object/%islandora_object/manage/collection_permissions'] = array(
    'title' => 'Collection Permissions',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_collection_permissions_object_form', 2),
    'access callback' => 'islandora_object_access',
    'access arguments' => array(ISLANDORA_COLLECTION_PERMISSIONS_MANAGE_COLLECTION_OVERRIDES, 2),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/form.inc',
  );

  return $item;
}

function islandora_collection_permissions_islandora_access_override_object_handlers() {
  $handlers = array();

  $mod_path = drupal_get_path('module', 'islandora_collection_permissions');

  foreach (_islandora_collection_permissions_flipped_map() as $perm => $mapped) {
    $handlers[$perm][] = array(
      'callable' => 'islandora_collection_permissions_test_object',
      'file' => "$mod_path/includes/callbacks.inc",
    );
  }

  return $handlers;
}

function islandora_collection_permissions_islandora_access_override_datastream_handlers() {
  $handlers = array();

  $mod_path = drupal_get_path('module', 'islandora_collection_permissions');

  $proxy = function ($op, AbstractDatastream $datastream, $user) {
    return islandora_collection_permissions_test_object($op, $datastream->parent, $user);
  };

  foreach (_islandora_collection_permissions_flipped_map() as $perm => $mapped) {
    $handlers[$perm][] = array(
      'callable' => $proxy,
      'file' => "$mod_path/includes/callbacks.inc",
    );
  }

  return $handlers;
}

/**
 * @return array
 *   An associative array mapping our pseudo-permissions to an array of real
 *   permissions which they are to grant.
 */
function _islandora_collection_permissions_map() {
  static $perm = NULL;

  if ($perm === NULL) {
    $perm =& drupal_static(__FUNCTION__, array());

    $perm[ISLANDORA_COLLECTION_PERMISSIONS_CREATE] = array(
      'title' => t('Create child collections'),
      'column' => 'create_perm',
      'perms' => array(
        ISLANDORA_INGEST,
        ISLANDORA_BASIC_COLLECTION_CREATE_CHILD_COLLECTION,
      ),
    );
    $perm[ISLANDORA_COLLECTION_PERMISSIONS_UPDATE] = array(
      'title' => t('Modify objects and datastreams'),
      'column' => 'update_perm',
      'perms' => array(
        ISLANDORA_METADATA_EDIT,
        ISLANDORA_ADD_DS,
        ISLANDORA_MANAGE_PROPERTIES,
        ISLANDORA_REVERT_DATASTREAM,
        ISLANDORA_VIEW_DATASTREAM_HISTORY,
        ISLANDORA_REGENERATE_DERIVATIVES,
        ISLANDORA_REPLACE_DATASTREAM_CONTENT,
      ),
    );
    $perm[ISLANDORA_COLLECTION_PERMISSIONS_DELETE] = array(
      'title' => t('Purge objects and datastreams'),
      'column' => 'delete_perm',
      'perms' => array(
        ISLANDORA_PURGE,
      ),
    );

    drupal_alter(__FUNCTION__, $perm);
  }

  return $perm;
}

/**
 * @return array
 *   An associative array mapping permission to one of our pseudo-permission
 *   strings.
 */
function _islandora_collection_permissions_flipped_map() {
  $perm =& drupal_static(__FUNCTION__);

  if ($perm === NULL) {
    $perm = array();

    foreach (_islandora_collection_permissions_map() as $k => $v) {
      foreach ($v['perms'] as $inner) {
        $perm[$inner] = $k;
      }
    }
  }

  return $perm;
}

#function islandora_collection_permissions_islandora_basic_collection_build_manage_object($form, AbstractObject $object) {
#  $form['manage_collection_object']['collection_permissions_override'] = array(
#    '#id' => 'collection-permissions-override',
#    '#group' => 'manage_collection_object',
#    '#access' => islandora_object_access(ISLANDORA_COLLECTION_PERMISSIONS_MANAGE_COLLECTION_OVERRIDES, $object),
#    '#type' => 'fieldset',
#    '#title' => t('Collection Permissions Overrides'),
#    'form' => drupal_get_form('islandora_collection_permissions_object_form', $object->id),
#  );
#
#  return $form;
#}

